###############################################################################
#
# Primitive Levels (Loglevels are not in any order!)
#
# You can define your own primitives (see the example 'exa'):
# 1. Add the new name of the primitive to the PRIMITIVE Property.
#    (You should use three lowercase letters for your primitive name to divide 
#     it from the component levels or predefined primitives) 
# 2. Define a new property with the name of your primitive as the key.
# 3. Add a property value to the key as an one-bit-set integer.
#    (The value has to be unique)
#
# ATTENTION: 
# You should not change or delete the uppercase primitives because there 
# are hardcoded used in JOOX. The lowercase primitives are free to change
# or delete.
#

PRIMITIVE= NUL VAR DBG TRC TRD TRT TRE PRF INF MSG WRN ERR FAT ALL exa brt
PRIMITIVE.ALL=7FFFFFFF
PRIMITIVE.NUL=00000000
PRIMITIVE.VAR=00000001
PRIMITIVE.DBG=00000002
PRIMITIVE.INF=00000004
PRIMITIVE.MSG=00000008
PRIMITIVE.PRF=00000010
PRIMITIVE.WRN=00000020
PRIMITIVE.ERR=00000040
PRIMITIVE.FAT=00000080
PRIMITIVE.TRC=00000100
PRIMITIVE.TRD=00000200
PRIMITIVE.TRT=00000400
PRIMITIVE.TRE=00000800
PRIMITIVE.exa=40000000
PRIMITIVE.brt=20000000



###############################################################################
#
# Composed Levels
#
# You can define your own composed levels (see the example 'example'):
# 1. Add the new name of the composed level to the LEVEL Property.
#    (You should use more than three lowercase letters for the keyname 
#     to divide your composed levels from the predefined uppercase ones and the
#     three letter primitives)
# 2. Define a new property with the name of your composed level as the key.
# 3. Add a property value to the key as a set of one or more primitive levels.
#
# ATTENTION: 
# You should not change the names of the uppercase composed levels because there
# used in JOOX. But you can change the sets of primitives as you like also for
# the uppercase levels.
#

LEVEL=NONE SILENT NORMAL VERBOSE TRACE1 TRACE2 TRACE3 TRACE4 DEBUG EVERY example 
LEVEL.NONE=NUL
LEVEL.SILENT=ERR FAT
LEVEL.NORMAL=ERR FAT WRN MSG brt
LEVEL.VERBOSE=ERR FAT WRN MSG INF 
LEVEL.TRACE1=ERR FAT WRN MSG INF TRC
LEVEL.TRACE2=ERR FAT WRN MSG INF TRC TRD
LEVEL.TRACE3=ERR FAT WRN MSG INF TRC TRD TRT
LEVEL.TRACE4=ERR FAT WRN MSG INF TRC TRD TRT TRE
LEVEL.DEBUG=ERR FAT WRN MSG INF TRC TRD TRT TRE DBG VAR
LEVEL.PROFILER=PRF
LEVEL.EVERY=ALL
LEVEL.example=VAR exa TRC INF



###############################################################################
#
# Logging Format Definitions
#
# --- Identification ---
# These Formats are predefined:
# %C Fullqualified classname
# %c Simple classname
# %d Date and time
# %g Threadgroupname
# %m Methodname (used from the in() method)
# %O Object-Id (Hashcode) (not yet implemented)
# %T Type of the Message
# %t Threadname
#
# --- Profiling ---
# %A Average time for each turn 
# %k The key which marks the corresponding profiling start and stop statements.
# %P Summary time for this key if used in prf method or the same traced method if used in method out(see method Logger.prf(..) )
# %p Delta time between last and current prf Messages with the same key (for Profiling) or the same traced method if used in method out
# %N Number of measurements for this key
#
# --- Exceptions ---
# %e The Exceptiontext
# %o By Exception aborted Methods (only use it after %e!!!)
# %x The Exception Stacktrace
#
# --- Tracing --
# %1 %2 ... Arguments of the corresponding method (not yet implementd)
# %i The indent of the tracing feature.
#
# --- misc ---
# %% the percent sign
# %n Newline
# %s The user defined message
#
# You can use some formatdefinitions for each primitive level to produce a 
# special output for your need.
#
# You have to define a format for each primitive
#

FORMAT.NUL=.
FORMAT.ALL=[%d{LEFT, ,28,28,'yyyy.MM.dd HH:mm:ss,SSS z'}  %T %g{RIGHT, ,16,16}.%t{LEFT, , 8,8} %C{LEFT, ,48,48}] %i
FORMAT.VAR=%s
FORMAT.DBG=%s
FORMAT.TRC=%m %s [%pms|%Pms|%Ams]:%N
FORMAT.TRD=%m %s [%pms|%Pms|%Ams]:%N
FORMAT.TRT=%m %s [%pms|%Pms|%Ams]:%N
FORMAT.TRE=%m %s [%pms|%Pms|%Ams]:%N
FORMAT.INF=%s
FORMAT.PRF=%k[%pms|%Pms|%Ams]:%N - %s
FORMAT.MSG=%s
FORMAT.WRN=WARNING: %s
FORMAT.ERR=>>>>EXCEPTION: '%e' in '%m()'%n%oException catched by '%m()'%n>>>>EXCEPTION STACKTRACE START<<<<%n>>>>%x%n>>>>EXCEPTION STACKTRACE END<<<<
FORMAT.FAT=>>>>FATAL ERROR: %e%n>>>>FATAL ERROR STACKTRACE START<<<<%n>>>>%x%n>>>>FATAL ERROR STACKTRACE END<<<<
FORMAT.exa=%s
FORMAT.brt=%s



###############################################################################
#
# Logchannels
#
# You can define your own Logchannels or use predefined ones.
# (for defining your own channels see the javadoc for the LogWriter interface):
# 1. Add a new name (as you like) of the log channel you want to use to the CHANNEL Property.
#    (You should use lowercase letters for the keyname to divide your self 
#     defined channels from the predefined uppercase ones)
# 2. Define a new property with the name of your log channel as the key.
# 3. Add a property value to the key as the name of the implementation of the 
#    LogWriter interface.
# 4. Define a new property with the name of your channel, a dot and the word 
#    'LEVEL' as the key
# 5. Add a space separated list of primitive or composed loglevels, which 
#    should be logged with this channel (You can also use the minus sign '-' 
#    to switch a level off.
#    Example: 'SILENT - ERR' will only log FAT Messages to that channel.)
#    If this list is empty nothing will be logged in this channel.
# 6. Add more keys for parameters needed by this kind of LogWriter. The name of
#    the parameter have to be the same as a corresponding setter-method in the
#    implementation (case sensitive!). All these parameters will be set during
#    the initialisation of this channel.
#
# ATTENTION: 
# You should not change the names of the uppercase channels because there
# used in JOOX. But you can change the sets of primitives as you like also for
# the uppercase levels. Also you can change all extended parameters for your needs
#
# TODO FORMAT.ALL for each CHANNEL

CHANNEL=STD ERR FILE ERRFILE NET LOG4J JAVALOG 
#JMS NT_EVENT UNIX_SYSLOG

CHANNEL.STD=org.joox.logging.SysOutLogChannel
#CHANNEL.STD.LEVEL=ALL -WRN -ERR -FAT 
CHANNEL.STD.LEVEL=TRC TRD TRT TRE DBG INF MSG VAR PRF
#CHANNEL.STD.LEVEL=TRC DBG INF MSG VAR
CHANNEL.STD.PARAMETER=

CHANNEL.ERR=org.joox.logging.SysErrLogChannel
CHANNEL.ERR.LEVEL=FAT ERR WRN brt
#CHANNEL.ERR.LEVEL=WRN ERR FAT
CHANNEL.ERR.PARAMETER=

CHANNEL.FILE=org.joox.logging.FileLogChannel
#CHANNEL.FILE.LEVEL=DBG INF MSG VAR WRN ERR FAT
CHANNEL.FILE.LEVEL=TRC DBG INF MSG VAR WRN ERR FAT
CHANNEL.FILE.PARAMETER=Mode Name Path MaxFileSize MaxFiles
CHANNEL.FILE.Mode=APPEND_ON_START
CHANNEL.FILE.Name=standard-/n/.log
CHANNEL.FILE.Path=c:\\
CHANNEL.FILE.MaxFileSize=2K
CHANNEL.FILE.MaxFiles=4

CHANNEL.ERRFILE=org.joox.logging.FileLogChannel
#CHANNEL.ERRFILE.LEVEL=DBG INF MSG VAR WRN ERR FAT
CHANNEL.ERRFILE.LEVEL=ERR FAT
# //TODO
CHANNEL.ERRFILE.FORMAT=[%d{LEFT, ,28,28,'yyyy.MM.dd HH:mm:ss,SSS z'}  %T %g{RIGHT, ,16,16}.%t{LEFT, , 8,8} %C{LEFT, ,48,48}]
CHANNEL.ERRFILE.PARAMETER=Mode Name Path MaxFileSize MaxFiles
CHANNEL.ERRFILE.Mode=REPLACE_ON_START
CHANNEL.ERRFILE.Name=error-/n/.log
CHANNEL.ERRFILE.Path=c:\\
CHANNEL.ERRFILE.MaxFileSize=2K
CHANNEL.ERRFILE.MaxFiles=4

CHANNEL.PROFILE=org.joox.logging.FileLogChannel
CHANNEL.PROFILE.LEVEL=PRF
# //TODO
CHANNEL.PROFILE.FORMAT=[%d{LEFT, ,28,28,'yyyy.MM.dd HH:mm:ss,SSS z'}  %T %g{RIGHT, ,16,16}.%t{LEFT, , 8,8} %C{LEFT, ,48,48}]
CHANNEL.PROFILE.PARAMETER=Mode Name Path MaxFileSize MaxFiles
CHANNEL.PROFILE.Mode=REPLACE_ON_START
CHANNEL.PROFILE.Name=profile-/n/.log
CHANNEL.PROFILE.Path=c:\\
CHANNEL.PROFILE.MaxFileSize=2K
CHANNEL.PROFILE.MaxFiles=4

CHANNEL.NET=org.joox.logging.NetLogChannel
CHANNEL.NET.LEVEL=
CHANNEL.NET.PARAMETER=Server Port
CHANNEL.NET.Server=
CHANNEL.NET.Port=

CHANNEL.LOG4J=org.joox.logging.Log4JChannel
CHANNEL.LOG4J.LEVEL=
CHANNEL.LOG4J.PARAMETER=Fatal Error Warn Info Debug Instance
CHANNEL.LOG4J.Fatal=FAT
CHANNEL.LOG4J.Error=ERR
CHANNEL.LOG4J.Warn=WRN
CHANNEL.LOG4J.Info=ALL -FAT -ERR -WRN -DBG -TRC
CHANNEL.LOG4J.Debug=DBG TRC TRE TRD TRT
CHANNEL.LOG4J.Instance=org.joox

CHANNEL.JAVALOG=org.joox.logging.JavaLoggingChannel
CHANNEL.JAVALOG.LEVEL=
CHANNEL.JAVALOG.PARAMETER=Severe Warning Info Config Fine Finer Finest
CHANNEL.JAVALOG.Severe=FAT ERR
CHANNEL.JAVALOG.Warning=WRN
CHANNEL.JAVALOG.Info=ALL -FAT -ERR -WRN -INF -VAR -TRC -TRD -TRT -TRE -DBG
CHANNEL.JAVALOG.Config=INF
CHANNEL.JAVALOG.Fine=TRC DBG
CHANNEL.JAVALOG.Finer=TRD TRT
CHANNEL.JAVALOG.Finest=TRE VAR



###############################################################################
#
# Different configuration parameters
#

#Intervall of refreshing the configuration (this file) in milliseconds 
LOGGING.REFRESHTIME=5000

#Transfer of System.out calls to a loglevel //TODO
SYSOUT=MSG

#Transfer of System.err calls to a loglevel //TODO
SYSERR=WRN


###############################################################################
#
# Loglevel Definitions for Classes, Packages or Threads
#
# The DEFAULT Primitive set the logging level for all classes which generate
# log output and has no more detailed logging definitions.
#
# You can add your own classes or packages for a more detailed logging level.
# 1. Use the fully qualified classname or a package name as the key.
# 2. Set the value of a set of one or more composed or primitive levelnames.
#    (You can also use the minus sign '-' to switch a level off.
#     Example: 'SILENT - ERR' will only log FAT Messages.)
#
# ATTENTION:
# Remember that allways the most exact package- or classname will be used.
# Only if no agreement of the logged classname with any key is found the 
# default key will be used.
#

DEFAULT=NORMAL
org.joox.core.Tree=TRACE1
#org.joox.tutorial=NORMAL
org.joox.demo.LoggingDemo=ALL
org.joox.demo.Computer=ALL
#org.joox.test=TRACE VAR NORMAL
#org.joox.core.spec.AbstractAdministrator=NORMAL
#org.joox.core.spec.Generator=NORMAL
#org.joox.core.spec.AbstractModel=NORMAL
